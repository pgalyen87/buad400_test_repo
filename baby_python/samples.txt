Windows PowerShell
Copyright (C) 2013 Microsoft Corporation. All rights reserved.

PS C:\Users\Administrator> cd C:\GitHub
PS C:\GitHub> mkdir fall_2014_course


    Directory: C:\GitHub


Mode                LastWriteTime     Length Name
----                -------------     ------ ----
d----          9/5/2014   6:02 PM            fall_2014_course


PS C:\GitHub> cd .\fall_2014_course
PS C:\GitHub\fall_2014_course> git init
Initialized empty Git repository in C:/GitHub/fall_2014_course/.git/
PS C:\GitHub\fall_2014_course> git remote add origin https://github.com/chrisgarcia001/BUAD-400-F2014.git
PS C:\GitHub\fall_2014_course> git pull origin master
remote: Counting objects: 3, done.
remote: Total 3 (delta 0), reused 0 (delta 0)
Unpacking objects: 100% (3/3), done.
From https://github.com/chrisgarcia001/BUAD-400-F2014
 * branch            master     -> FETCH_HEAD
 * [new branch]      master     -> origin/master
PS C:\GitHub\fall_2014_course> cd .\baby_python
PS C:\GitHub\fall_2014_course\baby_python> python
Python 2.7.7 |Anaconda 2.0.1 (64-bit)| (default, Jun 11 2014, 10:40:02) [MSC v.1500 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
Anaconda is brought to you by Continuum Analytics.
Please check out: http://continuum.io/thanks and https://binstar.org
>>> a = [2,4,58,10,12,14]
>>> a
[2, 4, 58, 10, 12, 14]
>>> len(list)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: object of type 'type' has no len()
>>>
>>>
>>> len(a)
6
>>> len([])
0
>>> a[2:4]
[58, 10]
>>> a[2:5]
[58, 10, 12]
>>> a
[2, 4, 58, 10, 12, 14]
>>> a[2:]
[58, 10, 12, 14]
>>> a[:5]
[2, 4, 58, 10, 12]
>>> a
[2, 4, 58, 10, 12, 14]
>>> a[::-1]
[14, 12, 10, 58, 4, 2]
>>> a
[2, 4, 58, 10, 12, 14]
>>>
>>>
>>>
>>>
>>> s1 = "Strning 1"
>>> s2 = 'String2'
>>> print('\n')


>>> print("\N")
\N
>>> print("\n")


>>> s1[1]
't'
>>> s1[1:4]
'trn'
>>> s3 = 'CAPS'
>>> s4 = 'lower'
>>> s3.lower()
'caps'
>>> s3.lower()
'caps'
>>> s4.upper()
'LOWER'
>>> 'abc-def-ghi'.split('-')
['abc', 'def', 'ghi']
>>> '-'.join(['abc', 'def', 'ghi'])
'abc-def-ghi'
>>>
>>>
>>> '-'.join(['abc', 'def', 'ghi'])
'abc-def-ghi'
>>> range(10)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
>>> range(15)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
>>> range(5,15)
[5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
>>> range(5,100,3)
[5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35, 38, 41, 44, 47, 50, 53, 56, 59, 62, 65, 68, 71, 74, 77, 80, 83, 86, 89, 92, 9
5, 98]
>>> s
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 's' is not defined
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> s1 = set([1,1,1,1,2,2,2,3,3,3,'a','a'])
>>> s1
set(['a', 1, 2, 3])
>>> s1.add(4)
>>> s1
set(['a', 1, 2, 3, 4])
>>> s1.add(4)
>>> s1
set(['a', 1, 2, 3, 4])
>>> s1.remove('a')
>>> s1
set([1, 2, 3, 4])
>>> s2 = set([3,4,5,6,7])
>>>
>>>
>>> s1
set([1, 2, 3, 4])
>>> s2
set([3, 4, 5, 6, 7])
>>> s1.union(s2)
set([1, 2, 3, 4, 5, 6, 7])
>>> s1.intersection(s2)
set([3, 4])
>>> s2.intersection(s1)
set([3, 4])
>>>
>>>
>>>
>>> s1
set([1, 2, 3, 4])
>>> s2
set([3, 4, 5, 6, 7])
>>> s1.difference(s2)
set([1, 2])
>>> s2.difference(s1)
set([5, 6, 7])
>>> a = (1,2)
>>> a
(1, 2)
>>> a[1]
2
>>> c = (2,3,4)
>>> d = (5,6,7)
>>> c
(2, 3, 4)
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> a = {'a':2, 'b':4, 'c':6}
>>> a
{'a': 2, 'c': 6, 'b': 4}
>>> a['a']
2
>>> a['b']
4
>>> a['b'] = 30
>>> a
{'a': 2, 'c': 6, 'b': 30}
>>> a['e'] = 'happy friday'
>>> a
{'a': 2, 'c': 6, 'b': 30, 'e': 'happy friday'}
>>> del(a['a'])
>>> a
{'c': 6, 'b': 30, 'e': 'happy friday'}
>>> a.keys()
['c', 'b', 'e']
>>> a.values()
[6, 30, 'happy friday']
>>> a.items()
[('c', 6), ('b', 30), ('e', 'happy friday')]
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> a
{'c': 6, 'b': 30, 'e': 'happy friday'}
>>> b = {'x':10, 'y':20}
>>> b
{'y': 20, 'x': 10}
>>> a.items() + b.items()
[('c', 6), ('b', 30), ('e', 'happy friday'), ('y', 20), ('x', 10)]
>>> dict(a.items())
{'c': 6, 'b': 30, 'e': 'happy friday'}
>>> dict(a.items() + b.items())
{'y': 20, 'x': 10, 'c': 6, 'b': 30, 'e': 'happy friday'}
>>> a
{'c': 6, 'b': 30, 'e': 'happy friday'}
>>> b
{'y': 20, 'x': 10}
>>> a.update(b)
>>> a
{'c': 6, 'b': 30, 'e': 'happy friday', 'y': 20, 'x': 10}
>>>
>>>
>>>
>>>
>>>
>>> for x in range(5,50,2):
... print(x * x)
  File "<stdin>", line 2
    print(x * x)
        ^
IndentationError: expected an indented block
>>> for x in range(5,50,2):
... print(x*x)
  File "<stdin>", line 2
    print(x*x)
        ^
IndentationError: expected an indented block
>>> for x in range(5,50,2):
...      print(x*x)
...
25
49
81
121
169
225
289
361
441
529
625
729
841
961
1089
1225
1369
1521
1681
1849
2025
2209
2401
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> i = 1
>>> while (i <= 10):
...      print("Happy Friday!")
...      i += 1
...
Happy Friday!
Happy Friday!
Happy Friday!
Happy Friday!
Happy Friday!
Happy Friday!
Happy Friday!
Happy Friday!
Happy Friday!
Happy Friday!
>>> while (j <= 10):
...      print(":(")
...       j += 1
  File "<stdin>", line 3
    j += 1
    ^
IndentationError: unexpected indent
>>> while (j <= 10):
...      print(":(")
...      j += 1
...
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'j' is not defined
>>> [w for  w in range(1,100,2)]
[1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61,
63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99]
>>> [w for  w in range(1,100,2) if w < 80]
[1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61,
63, 65, 67, 69, 71, 73, 75, 77, 79]
>>> even(2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'even' is not defined
>>> [w for  w in range(0,101) if w%2 == 0 ]
[0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60,
62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100]
>>> import baby_python
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ImportError: No module named baby_python
>>> import 'baby_python'
  File "<stdin>", line 1
    import 'baby_python'
                       ^
SyntaxError: invalid syntax
>>> import baby_code
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ImportError: No module named baby_code
>>> import 'baby_code'
  File "<stdin>", line 1
    import 'baby_code'
                     ^
SyntaxError: invalid syntax
>>> import "baby_code"
  File "<stdin>", line 1
    import "baby_code"
                     ^
SyntaxError: invalid syntax
>>> exit()
PS C:\GitHub\fall_2014_course\baby_python> dir
PS C:\GitHub\fall_2014_course\baby_python> ls
PS C:\GitHub\fall_2014_course\baby_python> python
Python 2.7.7 |Anaconda 2.0.1 (64-bit)| (default, Jun 11 2014, 10:40:02) [MSC v.1500 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
Anaconda is brought to you by Continuum Analytics.
Please check out: http://continuum.io/thanks and https://binstar.org
>>> import baby_code
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ImportError: No module named baby_code
>>> import 'baby_code'
  File "<stdin>", line 1
    import 'baby_code'
                     ^
SyntaxError: invalid syntax
>>> dir()
['__builtins__', '__doc__', '__name__', '__package__']
>>> cd ..
  File "<stdin>", line 1
    cd ..
        ^
SyntaxError: invalid syntax
>>> exit()
PS C:\GitHub\fall_2014_course\baby_python> dir
PS C:\GitHub\fall_2014_course\baby_python> cd ..
PS C:\GitHub\fall_2014_course> dir


    Directory: C:\GitHub\fall_2014_course


Mode                LastWriteTime     Length Name
----                -------------     ------ ----
d----          9/5/2014   6:03 PM            baby_python
-a---          9/5/2014   6:49 PM         47 baby_code.py
-a---          9/5/2014   6:03 PM        109 README.md


PS C:\GitHub\fall_2014_course> python
Python 2.7.7 |Anaconda 2.0.1 (64-bit)| (default, Jun 11 2014, 10:40:02) [MSC v.1500 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
Anaconda is brought to you by Continuum Analytics.
Please check out: http://continuum.io/thanks and https://binstar.org
>>> import baby_code
>>> add_2(4,5)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'add_2' is not defined
>>> import baby_code
>>> baby_code.add_2(5,6)
11
>>> exit()
PS C:\GitHub\fall_2014_course> git add *
PS C:\GitHub\fall_2014_course>